# -*- mode: yaml -*-
# Config file for ReBench
default_experiment: all
default_data_file: 'rebench.data'

reporting:
    # Benchmark results will be reported to ReBenchDB
    rebenchdb:
        # this url needs to point to the API endpoint
        db_url: https://rebench.stefan-marr.de/rebenchdb
        repo_url: https://github.com/smarr/TruffleSOM
        record_all: true # make sure everything is recorded
        project_name: TruffleSOM

runs:
    max_invocation_time: 6000

benchmark_suites:
    macro-startup:
        gauge_adapter: RebenchLog
        command: &MACRO_CMD "-cp Smalltalk:Examples/Benchmarks/Richards:Examples/Benchmarks/DeltaBlue:Examples/Benchmarks/NBody:Examples/Benchmarks/Json:Examples/Benchmarks/GraphSearch Examples/Benchmarks/BenchmarkHarness.som %(benchmark)s %(iterations)s 0 "
        iterations: 1
        invocations: 5
        benchmarks:
            - Richards:     {extra_args:    1, machines: [yuria ]}
            - DeltaBlue:    {extra_args:  100, machines: [yuria2]}
            - NBody:        {extra_args: 1000, machines: [yuria3]}
            - Json:         {extra_args:    1, machines: [yuria ]}
            - GraphSearch:  {extra_args:    7, machines: [yuria2]}
            - PageRank:     {extra_args:   75, machines: [yuria3]}

    macro-steady:
        gauge_adapter: RebenchLog
        command: *MACRO_CMD
        benchmarks:
            - Richards:     {extra_args: 40,     warmup:  30,   iterations: 130, machines: [yuria ]}
            - DeltaBlue:    {extra_args: 10000,  warmup:  20,   iterations: 120, machines: [yuria2]}
            - NBody:        {extra_args: 200000, warmup:  20,   iterations: 120, machines: [yuria3]}
            - Json:         {extra_args: 80,     warmup:  20,   iterations: 120, machines: [yuria ]}
            - GraphSearch:  {extra_args: 25,     warmup: 100,   iterations: 250, machines: [yuria2]}
            - PageRank:     {extra_args: 1000,   warmup:  20,   iterations: 120, machines: [yuria3]}


    micro-startup:
        gauge_adapter: RebenchLog
        command: &MICRO_CMD "-cp Smalltalk:Examples/Benchmarks/LanguageFeatures:Examples/Benchmarks/TestSuite Examples/Benchmarks/BenchmarkHarness.som %(benchmark)s %(iterations)s 0 "
        iterations: 1
        invocations: 5
        benchmarks:
            - Fannkuch:     {extra_args:   7, machines: [yuria ]}
            - Fibonacci:    {extra_args:  10, machines: [yuria2]}
            - Dispatch:     {extra_args:  10, machines: [yuria3]}
            - Bounce:       {extra_args:  10, machines: [yuria ]}
            - Loop:         {extra_args: 100, machines: [yuria2]}
            - Permute:      {extra_args:  10, machines: [yuria3]}
            - Queens:       {extra_args:  10, machines: [yuria ]}
            - List:         {extra_args:   2, machines: [yuria2]}
            - Recurse:      {extra_args:  12, machines: [yuria3]}
            - Storage:      {extra_args:   8, machines: [yuria ]}
            - Sieve:        {extra_args:  20, machines: [yuria2]}
            - BubbleSort:   {extra_args:  15, machines: [yuria3]}
            - QuickSort:    {extra_args:  15, machines: [yuria ]}
            - Sum:          {extra_args:  40, machines: [yuria2]}
            - Towers:       {extra_args:   2, machines: [yuria3]}
            - TreeSort:     {extra_args:   7, machines: [yuria ]}
            - IntegerLoop:  {extra_args:   7, machines: [yuria2]}
            - FieldLoop:    {extra_args:   1, machines: [yuria3]}
            - WhileLoop:    {extra_args:  30, machines: [yuria ]}
            - Mandelbrot:   {extra_args:  50, machines: [yuria2]}

            - Test:     {invocations: 10, machines: [yuria ]}

    micro-steady:
        gauge_adapter: RebenchLog
        command: *MICRO_CMD
        benchmarks:
            - Fannkuch:     {extra_args: 9,      warmup:   5,   iterations:  55, machines: [yuria ]}
            - Fibonacci:    {extra_args: 1000,   warmup:  10,   iterations:  60, machines: [yuria ]}
            - Dispatch:     {extra_args: 10000,  warmup:   5,   iterations:  55, machines: [yuria3]}
            - Bounce:       {extra_args: 4000,   warmup:  10,   iterations:  60, machines: [yuria ]}
            - Loop:         {extra_args: 10000,  warmup:   5,   iterations:  55, machines: [yuria2]}
            - Permute:      {extra_args: 1500,   warmup:   5,   iterations:  55, machines: [yuria3]}
            - Queens:       {extra_args: 1000,   warmup:   5,   iterations:  55, machines: [yuria ]}
            - List:         {extra_args: 1000,   warmup:  15,   iterations:  65, machines: [yuria ]}
            - Recurse:      {extra_args: 2000,   warmup:  15,   iterations:  65, machines: [yuria ]}
            - Storage:      {extra_args: 1000,   warmup:  10,   iterations:  60, machines: [yuria ]}
            - Sieve:        {extra_args: 2500,   warmup:  10,   iterations:  60, machines: [yuria2]}
            - BubbleSort:   {extra_args: 3000,   warmup:   5,   iterations:  55, machines: [yuria3]}
            - QuickSort:    {extra_args: 2000,   warmup:   5,   iterations:  55, machines: [yuria ]}
            - Sum:          {extra_args: 10000,  warmup:   5,   iterations:  55, machines: [yuria2]}
            - Towers:       {extra_args: 1000,   warmup:   5,   iterations:  55, machines: [yuria3]}
            - TreeSort:     {extra_args: 1000,   warmup:  10,   iterations:  60, machines: [yuria ]}
            - IntegerLoop:  {extra_args: 8000,   warmup:   5,   iterations:  55, machines: [yuria2]}
            - FieldLoop:    {extra_args: 900,    warmup:   5,   iterations:  55, machines: [yuria3]}
            - WhileLoop:    {extra_args: 9000,   warmup:   5,   iterations:  55, machines: [yuria2]}
            - Mandelbrot:   {extra_args: 1000,   warmup:  10,   iterations: 110, machines: [yuria3]}

    micro-somsom:
        gauge_adapter: RebenchLog
        command: "-cp Smalltalk:Examples/Benchmarks/LanguageFeatures Examples/Benchmarks/BenchmarkHarness.som %(benchmark)s %(iterations)s 0 "
        iterations: 1
        benchmarks:
            - Loop:         {extra_args: 1, machines: [yuria3]}
            - Queens:       {extra_args: 1, machines: [yuria ]}
            - List:         {extra_args: 1, machines: [yuria2]}
            - Recurse:      {extra_args: 1, machines: [yuria3]}
            - Mandelbrot:   {extra_args: 3, machines: [yuria ]}

executors:
    TruffleSOM-interp:
        path: .
        executable: som
        args: " -G "
    TruffleSOM-graal:
        path: .
        executable: som

    TruffleSOM-interp-bc:
        path: .
        executable: som
        args: " -G -Dsom.interp=BC "
    TruffleSOM-graal-bc:
        path: .
        executable: som
        args: " -Dsom.interp=BC "

    TruffleSOM-native:
        path: .
        executable: som-native-ast
    TruffleSOM-native-bc:
        path: .
        executable: som-native-bc

    TruffleSOM-native-interp-ast:
        path: .
        executable: som-native-interp-ast
    TruffleSOM-native-interp-bc:
        path: .
        executable: som-native-interp-bc
    
    SomSom-native-interp-ast:
        path: .
        executable: som-native-interp-ast
        args: "-cp core-lib/Smalltalk:core-lib/TestSuite:core-lib/SomSom/src/compiler:core-lib/SomSom/src/vm:core-lib/SomSom/src/vmobjects:core-lib/SomSom/src/interpreter:core-lib/SomSom/src/primitives core-lib/SomSom/src/vm/Main.som"

    SomSom-native-interp-bc:
        path: .
        executable: som-native-interp-bc
        args: "-Dsom.interp=BC -cp core-lib/Smalltalk:core-lib/TestSuite:core-lib/SomSom/src/compiler:core-lib/SomSom/src/vm:core-lib/SomSom/src/vmobjects:core-lib/SomSom/src/interpreter:core-lib/SomSom/src/primitives core-lib/SomSom/src/vm/Main.som"


# define the benchmarks to be executed for a re-executable benchmark run
experiments:
    TruffleSOM:
        description: All benchmarks on TruffleSOM (Java, AST Interpreter)
        executions:
            # - TruffleSOM-interp:
            #     suites:
            #         - micro-startup
            #         - macro-startup
            # - TruffleSOM-interp-bc:
            #     suites:
            #         - micro-startup
            #         - macro-startup
            # - TruffleSOM-graal:
            #     suites:
            #         - micro-startup
            #         - micro-steady
            #         - macro-startup
            #         - macro-steady
            # - TruffleSOM-graal-bc:
            #     suites:
            #         - micro-startup
            #         - micro-steady
            #         - macro-startup
            #         - macro-steady
            - TruffleSOM-native-interp-ast:
                suites:
                    - micro-startup
                    - macro-startup
            - TruffleSOM-native-interp-bc:
                suites:
                    - micro-startup
                    - macro-startup
    SomSom:
      description: Just startup benchmarks on SomSom
      suites:
        - micro-somsom
      executions:
        - SomSom-native-interp-ast
        - SomSom-native-interp-bc
